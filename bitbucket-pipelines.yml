image: node:8

pipelines:
  default:
    - step:
        caches:
          - node
        script:
          - echo Ok
          #- npm install
          #- npm test # No tests so far. Leaving this and hope to make them some day.
  branches:
    staging:
      - step:
          caches:
            - node
          script:
            - apt-get update
            - apt-get install -y ruby-full
            - apt-get install -y default-jre
            - gem install s3_website
            - yarn
            - rm -f env_config.js
            - "echo export default { > ./env_config.js"
            - "echo apiRoot: '\"https://api-staging.yogo.dk\"',  >> ./env_config.js"
            - "echo resizedImageServer: '\"http://yogo-resized-images-staging.s3-website.eu-central-1.amazonaws.com\"', >> ./env_config.js"
            - "echo imageServerImgix: '\"yogo-staging.imgix.net\"', >> ./env_config.js"
            - "echo -n googleWebFontsApiKey: '\"' >> ./env_config.js"
            - "echo -n ${GOOGLE_WEB_FONTS_API_KEY} >> ./env_config.js"
            - "echo '\"' >> ./env_config.js"
            - "echo } >> ./env_config.js"
            - cat env_config.js
            - yarn run build
            - "echo s3_id: ${S3_ACCESS_KEY_ID_STAGING} > ./s3_website.yml"
            - "echo s3_secret: ${S3_ACCESS_KEY_SECRET_STAGING} >> ./s3_website.yml"
            - "echo s3_bucket: app-staging.yogo.dk >> ./s3_website.yml"
            - "echo s3_key_prefix: admin >> ./s3_website.yml"
            - "echo site: dist/ >> ./s3_website.yml"
            - "echo cloudfront_distribution_id: $CLOUDFRONT_DISTRIBUTION_ID_STAGING >> ./s3_website.yml"
            - "echo cloudfront_wildcard_invalidation: true >> ./s3_website.yml"
            - s3_website push
    production:
      - step:
          caches:
            - node
          script:
            - apt-get update
            - apt-get install -y ruby-full
            - apt-get install -y default-jre
            - gem install s3_website
            - yarn
            - rm -f env_config.js
            - "echo export default { > ./env_config.js"
            - "echo apiRoot: '\"https://api.yogo.dk\"',  >> ./env_config.js"
            - "echo resizedImageServer: '\"http://yogo-resized-images.s3-website.eu-central-1.amazonaws.com\"', >> ./env_config.js"
            - "echo imageServerImgix: '\"yogo.imgix.net\"', >> ./env_config.js"
            - "echo -n googleWebFontsApiKey: '\"' >> ./env_config.js"
            - "echo -n ${GOOGLE_WEB_FONTS_API_KEY} >> ./env_config.js"
            - "echo '\"' >> ./env_config.js"
            - "echo } >> ./env_config.js"
            - cat env_config.js
            - yarn run build
            - "echo s3_id: ${S3_ACCESS_KEY_ID_PRODUCTION} > ./s3_website.yml"
            - "echo s3_secret: ${S3_ACCESS_KEY_SECRET_PRODUCTION} >> ./s3_website.yml"
            - "echo s3_bucket: app.yogo.dk >> ./s3_website.yml"
            - "echo s3_key_prefix: admin >> ./s3_website.yml"
            - "echo site: dist/ >> ./s3_website.yml"
            - "echo cloudfront_distribution_id: $CLOUDFRONT_DISTRIBUTION_ID_PRODUCTION >> ./s3_website.yml"
            - "echo cloudfront_wildcard_invalidation: true >> ./s3_website.yml"
            - s3_website push
